(load "../mk.scm")
(load "../matche.scm")
(load "../test-check.scm")

(define (evalo expr v) (eval-expo '() expr v))

(define (eval-expo env expr v)
  (fresh ()
    (absento 'in expr)
    (matche expr
      ((quote ,datum) (not-in-envo 'quote env) (== datum v))
      ((list . ,e*) (not-in-envo 'list env) (eval-listo env e* v))
      (,x (symbolo x) (lookupo `(,x : ,v) env))
      ((lambda (,x) ,e) (not-in-envo 'lambda env) (== `((lambda (,x) ,e) in ,env) v))
      ((,e1 ,e2)
       (fresh (x e env1 v2)
         (eval-expo env e1 `((lambda (,x) ,e) in ,env1))
         (eval-expo env e2 v2)
         (eval-expo `((,x : ,v2) . ,env1) e v))))))

(define (eval-listo env expr v)
  (matche (expr v)
    ((() ()))
    (((,e . ,e*) (,ve . ,ve*)) (eval-expo env e ve) (eval-listo env e* ve*))))

(define (lookupo binding env)
  (matche (binding env)
    (((,x : ,v) ((,x : ,v) . ,_)))
    (((,x : ,v) ((,y : ,_) . ,env1)) (=/= x y) (lookupo binding env1))))

(define (not-in-envo x env)
  (matche env
    (())
    (((,y . ,v) . ,env1) (=/= y x) (not-in-envo x env1))))



(test "lookupo-1"
  (run* (q) (lookupo '(x : 5) '((x : 5) (x : 6))))
  '(_.0))

(test "lookupo-2"
  (run* (q) (lookupo q '((x : 5) (x : 6))))
  '((x : 5)))

(test "lookupo-3"
  (run* (q) (lookupo q '((x : 5) (x : 6) (y : 7))))
  '((x : 5) (y : 7)))


(test "evalo-1"
  (run* (q) (evalo '(lambda (z) z) q))
  '(((lambda (z) z) in ())))

(test "eval-expo-1"
  (run 1 (q) (eval-expo q 'w 5))
  '(((w : 5) . _.0)))

(test "evalo-2"
  (run 5 (q) (evalo q '((lambda (z) z) in ())))
  '((lambda (z) z)
    (((lambda (_.0) _.0) (lambda (z) z)) (=/= ((_.0 in))) (sym _.0))
    (((lambda (_.0) (_.0 _.0)) (lambda (z) z)) (=/= ((_.0 in))) (sym _.0))
    (((lambda (_.0) ((lambda (_.1) _.0) '_.2)) (lambda (z) z)) (=/= ((_.0 _.1)) ((_.0 in)) ((_.0 lambda)) ((_.0 quote))) (sym _.0) (absento (in _.1) (in _.2)))
    (((lambda (_.0) ((lambda (_.1) _.1) _.0)) (lambda (z) z)) (=/= ((_.0 in)) ((_.0 lambda)) ((_.1 in))) (sym _.0 _.1))))


(test "quines-1"
  (run 1 (q) (evalo q q))
  '((((lambda (_.0) (list _.0 (list 'quote _.0)))
      '(lambda (_.0) (list _.0 (list 'quote _.0))))
     (=/= ((_.0 in)) ((_.0 list)) ((_.0 quote))) (sym _.0))))

(test "quines-2"
  (run 20 (q) (evalo q q))
  '((((lambda (_.0) (list _.0 (list 'quote _.0)))
      '(lambda (_.0) (list _.0 (list 'quote _.0))))
     (=/= ((_.0 in)) ((_.0 list)) ((_.0 quote))) (sym _.0))
    (((lambda (_.0)
        (list ((lambda (_.1) _.0) '_.2) (list 'quote _.0)))
      '(lambda (_.0)
         (list ((lambda (_.1) _.0) '_.2) (list 'quote _.0))))
     (=/= ((_.0 _.1)) ((_.0 in)) ((_.0 lambda)) ((_.0 list))
          ((_.0 quote)))
     (sym _.0) (absento (in _.1) (in _.2)))
    (((lambda (_.0)
        (list _.0 (list ((lambda (_.1) 'quote) '_.2) _.0)))
      '(lambda (_.0)
         (list _.0 (list ((lambda (_.1) 'quote) '_.2) _.0))))
     (=/= ((_.0 in)) ((_.0 lambda)) ((_.0 list))
          ((_.0 quote)) ((_.1 quote)))
     (sym _.0) (absento (in _.1) (in _.2)))
    (((lambda (_.0)
        (list (list 'lambda '(_.0) _.0) (list 'quote _.0)))
      '(list (list 'lambda '(_.0) _.0) (list 'quote _.0)))
     (=/= ((_.0 in)) ((_.0 list)) ((_.0 quote))) (sym _.0))
    (((lambda (_.0)
        ((lambda (_.1) (list _.0 (list 'quote _.0))) '_.2))
      '(lambda (_.0)
         ((lambda (_.1) (list _.0 (list 'quote _.0))) '_.2)))
     (=/= ((_.0 _.1)) ((_.0 in)) ((_.0 lambda)) ((_.0 list))
          ((_.0 quote)) ((_.1 list)) ((_.1 quote)))
     (sym _.0) (absento (in _.1) (in _.2)))
    (((lambda (_.0)
        (list _.0 (list ((lambda (_.1) _.1) 'quote) _.0)))
      '(lambda (_.0)
         (list _.0 (list ((lambda (_.1) _.1) 'quote) _.0))))
     (=/= ((_.0 in)) ((_.0 lambda)) ((_.0 list))
          ((_.0 quote)) ((_.1 in)))
     (sym _.0 _.1))
    (((lambda (_.0)
        (list _.0 ((lambda (_.1) (list 'quote _.0)) '_.2)))
      '(lambda (_.0)
         (list _.0 ((lambda (_.1) (list 'quote _.0)) '_.2))))
     (=/= ((_.0 _.1)) ((_.0 in)) ((_.0 lambda)) ((_.0 list))
          ((_.0 quote)) ((_.1 list)) ((_.1 quote)))
     (sym _.0) (absento (in _.1) (in _.2)))
    (((lambda (_.0)
        (list _.0 (list 'quote ((lambda (_.1) _.0) '_.2))))
      '(lambda (_.0)
         (list _.0 (list 'quote ((lambda (_.1) _.0) '_.2)))))
     (=/= ((_.0 _.1)) ((_.0 in)) ((_.0 lambda)) ((_.0 list))
          ((_.0 quote)))
     (sym _.0) (absento (in _.1) (in _.2)))
    (((lambda (_.0)
        ((lambda (_.1) (list _.1 (list 'quote _.1))) _.0))
      '(lambda (_.0)
         ((lambda (_.1) (list _.1 (list 'quote _.1))) _.0)))
     (=/= ((_.0 in)) ((_.0 lambda)) ((_.0 list))
          ((_.0 quote)) ((_.1 in)) ((_.1 list)) ((_.1 quote)))
     (sym _.0 _.1))
    (((lambda (_.0)
        (list _.0 ((lambda (_.1) (list 'quote _.1)) _.0)))
      '(lambda (_.0)
         (list _.0 ((lambda (_.1) (list 'quote _.1)) _.0))))
     (=/= ((_.0 in)) ((_.0 lambda)) ((_.0 list))
          ((_.0 quote)) ((_.1 in)) ((_.1 list)) ((_.1 quote)))
     (sym _.0 _.1))
    (((lambda (_.0)
        (list ((lambda (_.1) _.0) '_.2)
              (list ((lambda (_.3) 'quote) '_.4) _.0)))
      '(lambda (_.0)
         (list ((lambda (_.1) _.0) '_.2)
               (list ((lambda (_.3) 'quote) '_.4) _.0))))
     (=/= ((_.0 _.1)) ((_.0 in)) ((_.0 lambda)) ((_.0 list))
          ((_.0 quote)) ((_.3 quote)))
     (sym _.0) (absento (in _.1) (in _.2) (in _.3) (in _.4)))
    (((lambda (_.0)
        ((lambda (_.1) (list _.0 (list _.1 _.0))) 'quote))
      '(lambda (_.0)
         ((lambda (_.1) (list _.0 (list _.1 _.0))) 'quote)))
     (=/= ((_.0 _.1)) ((_.0 in)) ((_.0 lambda)) ((_.0 list))
          ((_.0 quote)) ((_.1 in)) ((_.1 list)))
     (sym _.0 _.1))
    (((lambda (_.0)
        (list _.0 (list 'quote ((lambda (_.1) _.1) _.0))))
      '(lambda (_.0)
         (list _.0 (list 'quote ((lambda (_.1) _.1) _.0)))))
     (=/= ((_.0 in)) ((_.0 lambda)) ((_.0 list))
          ((_.0 quote)) ((_.1 in)))
     (sym _.0 _.1))
    (((lambda (_.0)
        (list _.0 ((lambda (_.1) (list _.1 _.0)) 'quote)))
      '(lambda (_.0)
         (list _.0 ((lambda (_.1) (list _.1 _.0)) 'quote))))
     (=/= ((_.0 _.1)) ((_.0 in)) ((_.0 lambda)) ((_.0 list))
          ((_.0 quote)) ((_.1 in)) ((_.1 list)))
     (sym _.0 _.1))
    (((lambda (_.0)
        (list ((lambda (_.1) _.1) _.0) (list 'quote _.0)))
      '(lambda (_.0)
         (list ((lambda (_.1) _.1) _.0) (list 'quote _.0))))
     (=/= ((_.0 in)) ((_.0 lambda)) ((_.0 list))
          ((_.0 quote)) ((_.1 in)))
     (sym _.0 _.1))
    (((lambda (_.0)
        (list _.0 (list 'quote ((lambda (_.1) _.0) _.0))))
      '(lambda (_.0)
         (list _.0 (list 'quote ((lambda (_.1) _.0) _.0)))))
     (=/= ((_.0 _.1)) ((_.0 in)) ((_.0 lambda)) ((_.0 list))
          ((_.0 quote)))
     (sym _.0) (absento (in _.1)))
    (((lambda (_.0)
        (list _.0 ((lambda (_.1) (list 'quote _.0)) _.0)))
      '(lambda (_.0)
         (list _.0 ((lambda (_.1) (list 'quote _.0)) _.0))))
     (=/= ((_.0 _.1)) ((_.0 in)) ((_.0 lambda)) ((_.0 list))
          ((_.0 quote)) ((_.1 list)) ((_.1 quote)))
     (sym _.0) (absento (in _.1)))
    (((lambda (_.0)
        ((lambda (_.1) (list _.1 (list 'quote _.0))) _.0))
      '(lambda (_.0)
         ((lambda (_.1) (list _.1 (list 'quote _.0))) _.0)))
     (=/= ((_.0 _.1)) ((_.0 in)) ((_.0 lambda)) ((_.0 list))
          ((_.0 quote)) ((_.1 in)) ((_.1 list)) ((_.1 quote)))
     (sym _.0 _.1))
    (((lambda (_.0)
        (list ((lambda (_.1) _.0) '_.2)
              (list ((lambda (_.3) _.3) 'quote) _.0)))
      '(lambda (_.0)
         (list ((lambda (_.1) _.0) '_.2)
               (list ((lambda (_.3) _.3) 'quote) _.0))))
     (=/= ((_.0 _.1)) ((_.0 in)) ((_.0 lambda)) ((_.0 list))
          ((_.0 quote)) ((_.3 in)))
     (sym _.0 _.3) (absento (in _.1) (in _.2)))
    (((lambda (_.0)
        (list ((lambda (_.1) _.0) '_.2)
              ((lambda (_.3) (list 'quote _.0)) '_.4)))
      '(lambda (_.0)
         (list ((lambda (_.1) _.0) '_.2)
               ((lambda (_.3) (list 'quote _.0)) '_.4))))
     (=/= ((_.0 _.1)) ((_.0 _.3)) ((_.0 in)) ((_.0 lambda))
          ((_.0 list)) ((_.0 quote)) ((_.3 list)) ((_.3 quote)))
     (sym _.0) (absento (in _.1) (in _.2) (in _.3) (in _.4)))))

(test "twines-1"
  (run 1 (x)
    (fresh (p q)
      (=/= p q)
      (evalo p q) (evalo q p)
      (== `(,p ,q) x)))
  '((('((lambda (_.0)
          (list 'quote (list _.0 (list 'quote _.0))))
        '(lambda (_.0) (list 'quote (list _.0 (list 'quote _.0)))))
      ((lambda (_.0) (list 'quote (list _.0 (list 'quote _.0))))
       '(lambda (_.0) (list 'quote (list _.0 (list 'quote _.0))))))
     (=/= ((_.0 in)) ((_.0 list)) ((_.0 quote)))
     (sym _.0))))

(test "thrines-1"
  (run 1 (x)
    (fresh (p q r)
      (=/= p q) (=/= q r) (=/= r p)
      (evalo p q) (evalo q r) (evalo r p)
      (== `(,p ,q ,r) x)))
  '(((''((lambda (_.0)
           (list 'quote (list 'quote (list _.0 (list 'quote _.0)))))
         '(lambda (_.0) (list 'quote (list 'quote (list _.0 (list 'quote _.0))))))
      '((lambda (_.0) (list 'quote (list 'quote (list _.0 (list 'quote _.0)))))
        '(lambda (_.0) (list 'quote (list 'quote (list _.0 (list 'quote _.0))))))
      ((lambda (_.0) (list 'quote (list 'quote (list _.0 (list 'quote _.0)))))
       '(lambda (_.0) (list 'quote (list 'quote (list _.0 (list 'quote _.0)))))))
     (=/= ((_.0 in)) ((_.0 list)) ((_.0 quote)))
     (sym _.0))))

(test "love-1"
  (run 99 (q) (evalo q '(I love you)))
  '('(I love you)
    (((lambda (_.0) '(I love you)) '_.1) (=/= ((_.0 quote)))
     (absento (in _.0) (in _.1)))
    (((lambda (_.0) _.0) '(I love you)) (=/= ((_.0 in)))
     (sym _.0))
    (list 'I 'love 'you)
    (((lambda (_.0) '(I love you)) (list)) (=/= ((_.0 quote)))
     (absento (in _.0)))
    (((lambda (_.0) '(I love you)) (lambda (_.1) _.2))
     (=/= ((_.0 quote))) (absento (in _.0) (in _.1) (in _.2)))
    ((list ((lambda (_.0) 'I) '_.1) 'love 'you)
     (=/= ((_.0 quote))) (absento (in _.0) (in _.1)))
    ((list 'I 'love ((lambda (_.0) 'you) '_.1))
     (=/= ((_.0 quote))) (absento (in _.0) (in _.1)))
    ((list 'I ((lambda (_.0) 'love) '_.1) 'you)
     (=/= ((_.0 quote))) (absento (in _.0) (in _.1)))
    ((list 'I 'love ((lambda (_.0) _.0) 'you))
     (=/= ((_.0 in))) (sym _.0))
    (((lambda (_.0) ((lambda (_.1) '(I love you)) '_.2)) '_.3)
     (=/= ((_.0 lambda)) ((_.0 quote)) ((_.1 quote)))
     (absento (in _.0) (in _.1) (in _.2) (in _.3)))
    ((list ((lambda (_.0) _.0) 'I) 'love 'you)
     (=/= ((_.0 in))) (sym _.0))
    (((lambda (_.0) ((lambda (_.1) _.1) '(I love you))) '_.2)
     (=/= ((_.0 lambda)) ((_.0 quote)) ((_.1 in))) (sym _.1)
     (absento (in _.0) (in _.2)))
    (((lambda (_.0) (list 'I 'love 'you)) '_.1)
     (=/= ((_.0 list)) ((_.0 quote)))
     (absento (in _.0) (in _.1)))
    (((lambda (_.0) '(I love you)) (list '_.1))
     (=/= ((_.0 quote))) (absento (in _.0) (in _.1)))
    ((list 'I 'love ((lambda (_.0) 'you) (list)))
     (=/= ((_.0 quote))) (absento (in _.0)))
    (((lambda (_.0) ((lambda (_.1) _.0) '_.2)) '(I love you))
     (=/= ((_.0 _.1)) ((_.0 in)) ((_.0 lambda)) ((_.0 quote)))
     (sym _.0) (absento (in _.1) (in _.2)))
    ((list 'I ((lambda (_.0) _.0) 'love) 'you)
     (=/= ((_.0 in))) (sym _.0))
    (((lambda (_.0) (list 'I 'love _.0)) 'you)
     (=/= ((_.0 in)) ((_.0 list)) ((_.0 quote))) (sym _.0))
    (((lambda (_.0) ((lambda (_.1) '(I love you)) _.0)) '_.2)
     (=/= ((_.0 in)) ((_.0 lambda)) ((_.0 quote))
          ((_.1 quote)))
     (sym _.0) (absento (in _.1) (in _.2)))
    (((lambda (_.0) ((lambda (_.1) _.1) _.0)) '(I love you))
     (=/= ((_.0 in)) ((_.0 lambda)) ((_.1 in))) (sym _.0 _.1))
    ((list ((lambda (_.0) 'I) '_.1) 'love
           ((lambda (_.2) 'you) '_.3))
     (=/= ((_.0 quote)) ((_.2 quote)))
     (absento (in _.0) (in _.1) (in _.2) (in _.3)))
    (((lambda (_.0) ((lambda (_.1) '(I love you)) '_.2))
      (list))
     (=/= ((_.0 lambda)) ((_.0 quote)) ((_.1 quote)))
     (absento (in _.0) (in _.1) (in _.2)))
    (((lambda (_.0) (list 'I _.0 'you)) 'love)
     (=/= ((_.0 in)) ((_.0 list)) ((_.0 quote))) (sym _.0))
    ((list ((lambda (_.0) 'I) '_.1)
           ((lambda (_.2) 'love) '_.3) 'you)
     (=/= ((_.0 quote)) ((_.2 quote)))
     (absento (in _.0) (in _.1) (in _.2) (in _.3)))
    (((lambda (_.0) (list _.0 'love 'you)) 'I)
     (=/= ((_.0 in)) ((_.0 list)) ((_.0 quote))) (sym _.0))
    ((list 'I ((lambda (_.0) 'love) '_.1)
           ((lambda (_.2) 'you) '_.3))
     (=/= ((_.0 quote)) ((_.2 quote)))
     (absento (in _.0) (in _.1) (in _.2) (in _.3)))
    (((lambda (_.0) ((lambda (_.1) _.0) _.0)) '(I love you))
     (=/= ((_.0 _.1)) ((_.0 in)) ((_.0 lambda))) (sym _.0)
     (absento (in _.1)))
    ((list ((lambda (_.0) 'I) '_.1) 'love
           ((lambda (_.2) _.2) 'you))
     (=/= ((_.0 quote)) ((_.2 in))) (sym _.2)
     (absento (in _.0) (in _.1)))
    (((lambda (_.0) ((lambda (_.1) _.1) '(I love you))) (list))
     (=/= ((_.0 lambda)) ((_.0 quote)) ((_.1 in))) (sym _.1)
     (absento (in _.0)))
    (((lambda (_.0) ((lambda (_.1) '(I love you)) (list)))
      '_.2)
     (=/= ((_.0 lambda)) ((_.0 list)) ((_.0 quote))
          ((_.1 quote)))
     (absento (in _.0) (in _.1) (in _.2)))
    ((list 'I 'love ((lambda (_.0) 'you) (lambda (_.1) _.2)))
     (=/= ((_.0 quote))) (absento (in _.0) (in _.1) (in _.2)))
    (((lambda (_.0) (list 'I 'love 'you)) (list))
     (=/= ((_.0 list)) ((_.0 quote))) (absento (in _.0)))
    ((list ((lambda (_.0) 'I) (list)) 'love 'you)
     (=/= ((_.0 quote))) (absento (in _.0)))
    ((list 'I ((lambda (_.0) 'love) '_.1)
           ((lambda (_.2) _.2) 'you))
     (=/= ((_.0 quote)) ((_.2 in))) (sym _.2)
     (absento (in _.0) (in _.1)))
    ((list 'I 'love
           ((lambda (_.0) ((lambda (_.1) 'you) '_.2)) '_.3))
     (=/= ((_.0 lambda)) ((_.0 quote)) ((_.1 quote)))
     (absento (in _.0) (in _.1) (in _.2) (in _.3)))
    ((list ((lambda (_.0) 'I) '_.1) 'love
           ((lambda (_.2) 'you) (list)))
     (=/= ((_.0 quote)) ((_.2 quote)))
     (absento (in _.0) (in _.1) (in _.2)))
    ((list 'I 'love
           ((lambda (_.0) ((lambda (_.1) _.1) 'you)) '_.2))
     (=/= ((_.0 lambda)) ((_.0 quote)) ((_.1 in))) (sym _.1)
     (absento (in _.0) (in _.2)))
    (((lambda (_.0) (_.0 '_.1)) (lambda (_.2) '(I love you)))
     (=/= ((_.0 in)) ((_.0 quote)) ((_.2 quote))) (sym _.0)
     (absento (in _.1) (in _.2)))
    ((list ((lambda (_.0) 'I) '_.1) ((lambda (_.2) _.2) 'love)
           'you)
     (=/= ((_.0 quote)) ((_.2 in))) (sym _.2)
     (absento (in _.0) (in _.1)))
    (((lambda (_.0) ((lambda (_.1) '(I love you)) _.0)) (list))
     (=/= ((_.0 in)) ((_.0 lambda)) ((_.0 quote))
          ((_.1 quote)))
     (sym _.0) (absento (in _.1)))
    ((list 'I ((lambda (_.0) 'love) '_.1)
           ((lambda (_.2) 'you) (list)))
     (=/= ((_.0 quote)) ((_.2 quote)))
     (absento (in _.0) (in _.1) (in _.2)))
    ((list 'I ((lambda (_.0) 'love) (list)) 'you)
     (=/= ((_.0 quote))) (absento (in _.0)))
    (((lambda (_.0) ((lambda (_.1) _.0) (list))) '(I love you))
     (=/= ((_.0 _.1)) ((_.0 in)) ((_.0 lambda)) ((_.0 list)))
     (sym _.0) (absento (in _.1)))
    ((list 'I 'love
           ((lambda (_.0) ((lambda (_.1) _.0) '_.2)) 'you))
     (=/= ((_.0 _.1)) ((_.0 in)) ((_.0 lambda)) ((_.0 quote)))
     (sym _.0) (absento (in _.1) (in _.2)))
    ((list ((lambda (_.0) _.0) 'I) 'love
           ((lambda (_.1) 'you) '_.2))
     (=/= ((_.0 in)) ((_.1 quote))) (sym _.0)
     (absento (in _.1) (in _.2)))
    (((lambda (_.0) (_.0 '(I love you))) (lambda (_.1) _.1))
     (=/= ((_.0 in)) ((_.0 quote)) ((_.1 in))) (sym _.0 _.1))
    ((list 'I 'love
           ((lambda (_.0) ((lambda (_.1) 'you) _.0)) '_.2))
     (=/= ((_.0 in)) ((_.0 lambda)) ((_.0 quote))
          ((_.1 quote)))
     (sym _.0) (absento (in _.1) (in _.2)))
    ((list 'I ((lambda (_.0) _.0) 'love)
           ((lambda (_.1) 'you) '_.2))
     (=/= ((_.0 in)) ((_.1 quote))) (sym _.0)
     (absento (in _.1) (in _.2)))
    ((list ((lambda (_.0) _.0) 'I) ((lambda (_.1) 'love) '_.2)
           'you)
     (=/= ((_.0 in)) ((_.1 quote))) (sym _.0)
     (absento (in _.1) (in _.2)))
    ((list ((lambda (_.0) _.0) 'I) 'love
           ((lambda (_.1) _.1) 'you))
     (=/= ((_.0 in)) ((_.1 in))) (sym _.0 _.1))
    ((list 'I 'love
           ((lambda (_.0) ((lambda (_.1) _.1) _.0)) 'you))
     (=/= ((_.0 in)) ((_.0 lambda)) ((_.1 in))) (sym _.0 _.1))
    (((lambda (_.0) '(I love you)) (list (list)))
     (=/= ((_.0 quote))) (absento (in _.0)))
    (((lambda (_.0) ((lambda (_.1) '(I love you)) (list)))
      (list))
     (=/= ((_.0 lambda)) ((_.0 list)) ((_.0 quote))
          ((_.1 quote)))
     (absento (in _.0) (in _.1)))
    (((lambda (_.0) (list 'I 'love 'you)) (lambda (_.1) _.2))
     (=/= ((_.0 list)) ((_.0 quote)))
     (absento (in _.0) (in _.1) (in _.2)))
    ((list 'I ((lambda (_.0) _.0) 'love)
           ((lambda (_.1) _.1) 'you))
     (=/= ((_.0 in)) ((_.1 in))) (sym _.0 _.1))
    ((list ((lambda (_.0) 'I) '_.1)
           ((lambda (_.2) 'love) '_.3) ((lambda (_.4) 'you) '_.5))
     (=/= ((_.0 quote)) ((_.2 quote)) ((_.4 quote)))
     (absento (in _.0) (in _.1) (in _.2) (in _.3) (in _.4)
              (in _.5)))
    ((list ((lambda (_.0) 'I) '_.1) 'love
           ((lambda (_.2) 'you) (lambda (_.3) _.4)))
     (=/= ((_.0 quote)) ((_.2 quote)))
     (absento (in _.0) (in _.1) (in _.2) (in _.3) (in _.4)))
    ((list 'I 'love
           ((lambda (_.0) ((lambda (_.1) _.0) _.0)) 'you))
     (=/= ((_.0 _.1)) ((_.0 in)) ((_.0 lambda))) (sym _.0)
     (absento (in _.1)))
    (((lambda (_.0) (_.0 _.0)) (lambda (_.1) '(I love you)))
     (=/= ((_.0 in)) ((_.1 quote))) (sym _.0)
     (absento (in _.1)))
    (((lambda (_.0) (list 'I 'love ((lambda (_.1) 'you) '_.2)))
      '_.3)
     (=/= ((_.0 lambda)) ((_.0 list)) ((_.0 quote))
          ((_.1 quote)))
     (absento (in _.0) (in _.1) (in _.2) (in _.3)))
    ((list 'I ((lambda (_.0) 'love) '_.1)
           ((lambda (_.2) 'you) (lambda (_.3) _.4)))
     (=/= ((_.0 quote)) ((_.2 quote)))
     (absento (in _.0) (in _.1) (in _.2) (in _.3) (in _.4)))
    ((list 'I 'love
           ((lambda (_.0) ((lambda (_.1) 'you) '_.2)) (list)))
     (=/= ((_.0 lambda)) ((_.0 quote)) ((_.1 quote)))
     (absento (in _.0) (in _.1) (in _.2)))
    ((list ((lambda (_.0) 'I) '_.1)
           ((lambda (_.2) 'love) '_.3) ((lambda (_.4) _.4) 'you))
     (=/= ((_.0 quote)) ((_.2 quote)) ((_.4 in))) (sym _.4)
     (absento (in _.0) (in _.1) (in _.2) (in _.3)))
    ((list 'I 'love
           ((lambda (_.0) ((lambda (_.1) 'you) (list))) '_.2))
     (=/= ((_.0 lambda)) ((_.0 list)) ((_.0 quote))
          ((_.1 quote)))
     (absento (in _.0) (in _.1) (in _.2)))
    (((lambda (_.0) (list 'I 'love ((lambda (_.1) _.1) 'you)))
      '_.2)
     (=/= ((_.0 lambda)) ((_.0 list)) ((_.0 quote))
          ((_.1 in)))
     (sym _.1) (absento (in _.0) (in _.2)))
    ((list 'I 'love ((lambda (_.0) 'you) (list '_.1)))
     (=/= ((_.0 quote))) (absento (in _.0) (in _.1)))
    ((list 'I 'love
           ((lambda (_.0) ((lambda (_.1) _.1) 'you)) (list)))
     (=/= ((_.0 lambda)) ((_.0 quote)) ((_.1 in))) (sym _.1)
     (absento (in _.0)))
    ((list ((lambda (_.0) _.0) 'I) 'love
           ((lambda (_.1) 'you) (list)))
     (=/= ((_.0 in)) ((_.1 quote))) (sym _.0)
     (absento (in _.1)))
    ((list ((lambda (_.0) 'I) '_.1) 'love
           ((lambda (_.2) ((lambda (_.3) 'you) '_.4)) '_.5))
     (=/= ((_.0 quote)) ((_.2 lambda)) ((_.2 quote))
          ((_.3 quote)))
     (absento (in _.0) (in _.1) (in _.2) (in _.3) (in _.4)
              (in _.5)))
    (((lambda (_.0)
        ((lambda (_.1) '(I love you)) (lambda (_.2) _.3)))
      '_.4)
     (=/= ((_.0 lambda)) ((_.0 quote)) ((_.1 quote)))
     (absento (in _.0) (in _.1) (in _.2) (in _.3) (in _.4)))
    (((lambda (_.0)
        ((lambda (_.1) ((lambda (_.2) '(I love you)) '_.3))
         '_.4))
      '_.5)
     (=/= ((_.0 lambda)) ((_.0 quote)) ((_.1 lambda))
          ((_.1 quote)) ((_.2 quote)))
     (absento (in _.0) (in _.1) (in _.2) (in _.3) (in _.4)
              (in _.5)))
    ((list 'I ((lambda (_.0) _.0) 'love)
           ((lambda (_.1) 'you) (list)))
     (=/= ((_.0 in)) ((_.1 quote))) (sym _.0)
     (absento (in _.1)))
    ((list ((lambda (_.0) _.0) 'I) ((lambda (_.1) _.1) 'love)
           'you)
     (=/= ((_.0 in)) ((_.1 in))) (sym _.0 _.1))
    ((list 'I ((lambda (_.0) 'love) '_.1)
           ((lambda (_.2) ((lambda (_.3) 'you) '_.4)) '_.5))
     (=/= ((_.0 quote)) ((_.2 lambda)) ((_.2 quote))
          ((_.3 quote)))
     (absento (in _.0) (in _.1) (in _.2) (in _.3) (in _.4)
              (in _.5)))
    (((lambda (_.0)
        ((lambda (_.1) ((lambda (_.2) _.2) '(I love you)))
         '_.3))
      '_.4)
     (=/= ((_.0 lambda)) ((_.0 quote)) ((_.1 lambda))
          ((_.1 quote)) ((_.2 in)))
     (sym _.2) (absento (in _.0) (in _.1) (in _.3) (in _.4)))
    (((lambda (_.0) ((lambda (_.1) (list 'I 'love 'you)) '_.2))
      '_.3)
     (=/= ((_.0 lambda)) ((_.0 list)) ((_.0 quote))
          ((_.1 list)) ((_.1 quote)))
     (absento (in _.0) (in _.1) (in _.2) (in _.3)))
    (((lambda (_.0) (list 'I 'love ((lambda (_.1) _.0) '_.2)))
      'you)
     (=/= ((_.0 _.1)) ((_.0 in)) ((_.0 lambda)) ((_.0 list))
          ((_.0 quote)))
     (sym _.0) (absento (in _.1) (in _.2)))
    ((list ((lambda (_.0) 'I) '_.1) 'love
           ((lambda (_.2) ((lambda (_.3) _.3) 'you)) '_.4))
     (=/= ((_.0 quote)) ((_.2 lambda)) ((_.2 quote))
          ((_.3 in)))
     (sym _.3) (absento (in _.0) (in _.1) (in _.2) (in _.4)))
    ((list 'I ((lambda (_.0) 'love) '_.1)
           ((lambda (_.2) ((lambda (_.3) _.3) 'you)) '_.4))
     (=/= ((_.0 quote)) ((_.2 lambda)) ((_.2 quote))
          ((_.3 in)))
     (sym _.3) (absento (in _.0) (in _.1) (in _.2) (in _.4)))
    (((lambda (_.0) '(I love you)) (list '_.1 '_.2))
     (=/= ((_.0 quote))) (absento (in _.0) (in _.1) (in _.2)))
    ((list ((lambda (_.0) 'I) '_.1)
           ((lambda (_.2) 'love) '_.3)
           ((lambda (_.4) 'you) (list)))
     (=/= ((_.0 quote)) ((_.2 quote)) ((_.4 quote)))
     (absento (in _.0) (in _.1) (in _.2) (in _.3) (in _.4)))
    ((list ((lambda (_.0) 'I) '_.1)
           ((lambda (_.2) 'love) (list)) 'you)
     (=/= ((_.0 quote)) ((_.2 quote)))
     (absento (in _.0) (in _.1) (in _.2)))
    ((list ((lambda (_.0) 'I) '_.1) 'love
           ((lambda (_.2) ((lambda (_.3) _.2) '_.4)) 'you))
     (=/= ((_.0 quote)) ((_.2 _.3)) ((_.2 in)) ((_.2 lambda))
          ((_.2 quote)))
     (sym _.2) (absento (in _.0) (in _.1) (in _.3) (in _.4)))
    (((lambda (_.0)
        ((lambda (_.1) ((lambda (_.2) _.1) '_.3))
         '(I love you)))
      '_.4)
     (=/= ((_.0 lambda)) ((_.0 quote)) ((_.1 _.2)) ((_.1 in))
          ((_.1 lambda)) ((_.1 quote)))
     (sym _.1) (absento (in _.0) (in _.2) (in _.3) (in _.4)))
    ((list 'I ((lambda (_.0) 'love) '_.1)
           ((lambda (_.2) ((lambda (_.3) _.2) '_.4)) 'you))
     (=/= ((_.0 quote)) ((_.2 _.3)) ((_.2 in)) ((_.2 lambda))
          ((_.2 quote)))
     (sym _.2) (absento (in _.0) (in _.1) (in _.3) (in _.4)))
    (((lambda (_.0) (_.0 (list))) (lambda (_.1) '(I love you)))
     (=/= ((_.0 in)) ((_.0 list)) ((_.1 quote))) (sym _.0)
     (absento (in _.1)))
    ((list 'I 'love
           ((lambda (_.0) ((lambda (_.1) _.0) (list))) 'you))
     (=/= ((_.0 _.1)) ((_.0 in)) ((_.0 lambda)) ((_.0 list)))
     (sym _.0) (absento (in _.1)))
    (((lambda (_.0) ((lambda (_.1) (list 'I 'love _.1)) 'you))
      '_.2)
     (=/= ((_.0 lambda)) ((_.0 list)) ((_.0 quote))
          ((_.1 in)) ((_.1 list)) ((_.1 quote)))
     (sym _.1) (absento (in _.0) (in _.2)))
    (((lambda (_.0) (list ((lambda (_.1) 'I) '_.2) 'love 'you))
      '_.3)
     (=/= ((_.0 lambda)) ((_.0 list)) ((_.0 quote))
          ((_.1 quote)))
     (absento (in _.0) (in _.1) (in _.2) (in _.3)))
    ((list ((lambda (_.0) 'I) (list)) 'love
           ((lambda (_.1) 'you) '_.2))
     (=/= ((_.0 quote)) ((_.1 quote)))
     (absento (in _.0) (in _.1) (in _.2)))
    ((list ((lambda (_.0) 'I) (lambda (_.1) _.2)) 'love 'you)
     (=/= ((_.0 quote))) (absento (in _.0) (in _.1) (in _.2)))
    (((lambda (_.0) (list 'I 'love ((lambda (_.1) 'you) _.0)))
      '_.2)
     (=/= ((_.0 in)) ((_.0 lambda)) ((_.0 list))
          ((_.0 quote)) ((_.1 quote)))
     (sym _.0) (absento (in _.1) (in _.2)))
    ((list 'I 'love
           ((lambda (_.0) ((lambda (_.1) 'you) _.0)) (list)))
     (=/= ((_.0 in)) ((_.0 lambda)) ((_.0 quote))
          ((_.1 quote)))
     (sym _.0) (absento (in _.1)))
    (((lambda (_.0) (list ((lambda (_.1) 'I) '_.2) 'love 'you))
      (list))
     (=/= ((_.0 lambda)) ((_.0 list)) ((_.0 quote))
          ((_.1 quote)))
     (absento (in _.0) (in _.1) (in _.2)))
    (((lambda (_.0)
        ((lambda (_.1) ((lambda (_.2) _.0) '_.3)) '_.4))
      '(I love you))
     (=/= ((_.0 _.1)) ((_.0 _.2)) ((_.0 in)) ((_.0 lambda))
          ((_.0 quote)) ((_.1 lambda)) ((_.1 quote)))
     (sym _.0) (absento (in _.1) (in _.2) (in _.3) (in _.4)))
    (((lambda (_.0) ((lambda (_.1) _.0) (lambda (_.2) _.3)))
      '(I love you))
     (=/= ((_.0 _.1)) ((_.0 in)) ((_.0 lambda))) (sym _.0)
     (absento (in _.1) (in _.2) (in _.3)))
    ((list 'I 'love
           ((lambda (_.0)
              ((lambda (_.1) ((lambda (_.2) 'you) '_.3)) '_.4))
            '_.5))
     (=/= ((_.0 lambda)) ((_.0 quote)) ((_.1 lambda))
          ((_.1 quote)) ((_.2 quote)))
     (absento (in _.0) (in _.1) (in _.2) (in _.3) (in _.4)
              (in _.5)))
    ((list 'I 'love
           ((lambda (_.0) (_.0 '_.1)) (lambda (_.2) 'you)))
     (=/= ((_.0 in)) ((_.0 quote)) ((_.2 quote))) (sym _.0)
     (absento (in _.1) (in _.2)))))
